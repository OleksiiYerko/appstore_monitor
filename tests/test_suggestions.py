#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫
"""

import json
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(__file__)))

from src.scrapers.charts_scraper import get_search_suggestions, get_suggestions_for_keywords

def test_single_suggestion():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–ª—è –æ–¥–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"""
    print("üß™ –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–ª—è 'camera'")
    
    suggestions = get_search_suggestions("camera", "us")
    
    if suggestions:
        print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ {len(suggestions)} –ø–æ–¥—Å–∫–∞–∑–æ–∫:")
        for i, suggestion in enumerate(suggestions[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            print(f"  {i}. {suggestion}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        with open("suggestions_test.json", "w", encoding="utf-8") as f:
            json.dump(suggestions, f, ensure_ascii=False, indent=2)
        print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ suggestions_test.json")
    else:
        print("‚ùå –ü–æ–¥—Å–∫–∞–∑–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

def test_multiple_keywords():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ —Ñ–∞–π–ª–∞
    keywords_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), "data", "config", "keywords.json")
    try:
        with open(keywords_path, "r", encoding="utf-8") as f:
            keywords_data = json.load(f)
            keywords = list(keywords_data.keys())
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª keywords.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 3 –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
    test_keywords = keywords[:3]
    print(f"üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {test_keywords}")
    
    results = get_suggestions_for_keywords(test_keywords, "us")
    
    if results:
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        for keyword, suggestions in results.items():
            print(f"\nüîç '{keyword}': {len(suggestions)} –ø–æ–¥—Å–∫–∞–∑–æ–∫")
            for i, suggestion in enumerate(suggestions[:5], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"  {i}. {suggestion}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        with open("suggestions_multiple.json", "w", encoding="utf-8") as f:
            json.dump(results, f, ensure_ascii=False, indent=2)
        print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ suggestions_multiple.json")
    else:
        print("‚ùå –ü–æ–¥—Å–∫–∞–∑–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

def test_different_countries():
    """–¢–µ—Å—Ç –ø–æ–¥—Å–∫–∞–∑–æ–∫ –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö"""
    print("\nüß™ –¢–µ—Å—Ç 3: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö")
    
    countries = ["us", "gb", "de", "fr", "ru"]
    query = "camera"
    
    results = {}
    
    for country in countries:
        print(f"\nüåç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω—É: {country}")
        suggestions = get_search_suggestions(query, country)
        results[country] = suggestions
        
        if suggestions:
            print(f"  –ù–∞–π–¥–µ–Ω–æ {len(suggestions)} –ø–æ–¥—Å–∫–∞–∑–æ–∫")
            for i, suggestion in enumerate(suggestions[:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  {i}. {suggestion}")
        else:
            print("  –ü–æ–¥—Å–∫–∞–∑–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    with open("suggestions_countries.json", "w", encoding="utf-8") as f:
        json.dump(results, f, ensure_ascii=False, indent=2)
    print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ suggestions_countries.json")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_single_suggestion()
    test_multiple_keywords()
    test_different_countries()
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!") 